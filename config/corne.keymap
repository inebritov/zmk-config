/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        az_gui {
            bindings = <&kp LGUI>;
            key-positions = <25 26>;
            layers = <0 1 2>;
        };

        dotcol_rgui {
            bindings = <&kp RGUI>;
            key-positions = <34 33>;
            layers = <0 1 2>;
        };

        adj_tog {
            bindings = <&sl 3>;
            key-positions = <2 3>;
            layers = <1 2>;
        };

        asdf_macro_run {
            bindings = <&asdf_macro>;
            key-positions = <28 29 27>;
        };

        term_macro_run {
            bindings = <&term_macro>;
            key-positions = <17 16 15>;
        };
    };

    macros {
        asdf_macro: asdf_macro {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp S &kp D &kp F>;
        };
        term_macro: term_macro {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp GRAVE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAIN {
            label = "MAIN";
            bindings = <
  &none   &kp Q   &kp W         &kp E      &kp R            &kp T            &kp Y            &kp U         &kp I    &kp O          &kp P   &none
  &none   &kp A   &kp S         &kp D      &kp F            &kp G            &kp H            &kp J         &kp K    &kp L  &kp SEMICOLON   &none
  &none   &kp Z   &kp X         &kp C      &kp V            &kp B            &kp N            &kp M     &kp COMMA  &kp DOT       &kp FSLH   &none
                         &mt LALT ESC  &lt 2 TAB  &mt LCTRL SPACE  &mt LSHFT ENTER  &lt 1 BACKSPACE  &mt LGUI DEL
            >;
        };

        SYM {
            label = "SYM";
            bindings = <
 &trans  &kp F12  &kp F7  &kp F8  &kp F9      &kp GRAVE  &kp EQUAL  &kp N7  &kp N8  &kp N9   &kp LEFT_BRACKET  &trans
 &trans  &kp F11  &kp F4  &kp F5  &kp F6  &kp BACKSLASH  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp RIGHT_BRACKET  &trans
 &trans  &kp F10  &kp F1  &kp F2  &kp F3      &kp MINUS     &kp N0  &kp N1  &kp N2  &kp N3   &kp SINGLE_QUOTE  &trans
                          &trans  &trans         &trans     &trans  &trans  &trans
            >;
        };

        NUM {
            label = "NUM";
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans    &kp K_SCROLL_UP        &kp HOME          &kp UP          &kp END        &kp PG_UP  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &kp K_SCROLL_DOWN        &kp LEFT        &kp DOWN        &kp RIGHT        &kp PG_DN  &trans
 &trans  &trans  &trans  &trans  &trans  &trans           &kp CAPS  &kp SCROLLLOCK  &kp KP_NUMLOCK  &kp PRINTSCREEN  &kp PAUSE_BREAK  &trans
                         &trans  &trans  &trans             &trans          &trans          &trans
            >;
        };

        ADJ {
            label = "ADJ";
            bindings = <
 &reset   &bootloader         &none         &none         &none  &out OUT_USB  &out OUT_USB         &none         &none         &none   &bootloader  &reset
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0   &none
  &none    &bt BT_CLR         &none         &none         &none  &out OUT_BLE  &out OUT_BLE         &none         &none         &none    &bt BT_CLR   &none
                                           &trans         &none        &trans        &trans         &none        &trans
            >;
        };
    };
};
